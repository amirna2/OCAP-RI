// COPYRIGHT_BEGIN
//  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
//  
//  Copyright (C) 2008-2013, Cable Television Laboratories, Inc. 
//  
//  This software is available under multiple licenses: 
//  
//  (1) BSD 2-clause 
//   Redistribution and use in source and binary forms, with or without modification, are
//   permitted provided that the following conditions are met:
//        ·Redistributions of source code must retain the above copyright notice, this list 
//             of conditions and the following disclaimer.
//        ·Redistributions in binary form must reproduce the above copyright notice, this list of conditions 
//             and the following disclaimer in the documentation and/or other materials provided with the 
//             distribution.
//   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
//   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED 
//   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
//   PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
//   HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
//   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
//   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
//   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
//   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF 
//   THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  
//  (2) GPL Version 2
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, version 2. This program is distributed
//   in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
//   even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//   PURPOSE. See the GNU General Public License for more details.
//  
//   You should have received a copy of the GNU General Public License along
//   with this program.If not, see<http:www.gnu.org/licenses/>.
//  
//  (3)CableLabs License
//   If you or the company you represent has a separate agreement with CableLabs
//   concerning the use of this code, your rights and obligations with respect
//   to this code shall be as set forth therein. No license is granted hereunder
//   for any other purpose.
//  
//   Please contact CableLabs if you need additional information or 
//   have any questions.
//  
//       CableLabs
//       858 Coal Creek Cir
//       Louisville, CO 80027-9750
//       303 661-9100
// COPYRIGHT_END

// List of scripts used by this script
//
this.interpreter.source("scripts/level1/DVR-TSB.bsh");
this.interpreter.source("scripts/level1/DVRMisc.bsh");

String CORE_OADTSBDiskSpace()
{
    String failureReason = null;
    String logStr = "CORE_OADTSBDiskSpace - ";

    // *TODO* - OCORI-4447 Redo this script to perform a scenario. 
        ////////////////////////////////////////////////////////////////////
    /// TSB
    //

    if (!tsbControl(true))
    {
        rxLog.callTrace("tsbControl() failed", this.callstack);
        failureReason = "tsbControl() returned false - FAIL";
        return failureReason;
    }
    rxLog.info("tsbControl() returned true");

    if (!isTsbEnabled())
    {
        rxLog.callTrace("isTsbEnabled() failed", this.callstack);
        failureReason = "isTsbEnabled() returned false - FAIL";
        return failureReason;
    } 
    rxLog.info("isTsbEnabled() returned true");

    if (!isBufferingEnabled())
    {
        rxLog.callTrace("isBufferingEnabled() failed", this.callstack);
        failureReason = "isBufferingEnabled() returned false - FAIL";
        return failureReason;
    } 
    rxLog.info("isBufferingEnabled() returned true");
   
    toggleBufferingEnabled();

    if (getDiskSpace() == 0)
    {
        rxLog.callTrace("getDiskSpace failed", this.callstack);
        failureReason = "getDiskSpace returned 0 - FAIL";
        return failureReason;
    } 
    rxLog.info("getDiskSpace passed");

    if (!checkDiskSpace(0))
    {
        rxLog.callTrace("checkDiskSpace(0) failed", this.callstack);
        failureReason = "checkDiskSpace(0) returned false -FAIL";
        return failureReason;
    } 
    rxLog.info("checkDiskSpace(0) returned true");

    if (getBufferTime(true) == Double.NaN)
    {
        rxLog.callTrace("getBufferTime(true) failed", this.callstack);
        failureReason = "getBufferTime(true) returned Double.NaN - FAIL";
        return failureReason;
    } 
    rxLog.info("getBufferTime(true) passed");

    try
    {
        //TODO: OCORI-3783: Find way to test if buffering was successful instead
        // of just assuming operation succeeded if no exception occurred.
        toggleBufferingRequest(45);
        rxLog.info("toggleBufferingRequest(45) successful");
    }
    catch (Exception e)
    {
        rxLog.info("Exception testing toggleBufferingRequest(45)");
    }

    toggleBufferingEnabled();

    rxLog.info(logStr + "PASS");
        
    return failureReason;
}
