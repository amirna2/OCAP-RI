This file describes the RecordingChangedListener (RCL) Tests

    RCL-1 - MonitorAppPermission("handler.recording");
            Recording Requests include a mix of "vanilla" Extended
            File Access Permissions and some that list "other" Org IDs
            for read access.
    RCL-2 - MonitorAppPermission("recording");
            Recording Requests include a mix of "vanilla" Extended
            File Access Permissions and some that list "other" Org IDs

RCL-1
-----
PURPOSE:
    Confirm that listener Xlet with MonitorAppPermission("handler.recording")
    receives all RecordingChangedEvents, regardless of the Extended File
    Access Permissions.

    Listener Xlet Attributes:

    1. Different organization ID than the Test Manager Xlet
       (which creates recording requests).
    2. Monitor Application AppID

    re: hostapp.properties application_identifier

FILES:
    RCL-1-ha.properties   --> usr/hostapp.properties
    RCL-1-primary.cfg     --> qa/xlet/
    ocap.TestMgrXlet.perm --> qa/xlet/org/cablelabs/xlet/DvrSecurityTest/
    ocap.RecordingChangedListenerMAXlet.perm --> qa/xlet/org/cablelabs/xlet/DvrSecurityTest/

PROCEDURE:
    1. If necessary, modify RCL-1-primary.cfg:
        1a. Provide appropriate Source IDs.
        1b. Specify appropriate Start Times, durations (msec), and expiration
            periods (sec).  The recording requests should transition to COMPLETE
            in rapid fashion, but it is best to not generate "overlapping"
            events.
    2. If necessary, modify ocap.RecordingChangedListenerMAXlet.perm
        2a. Ensure "handler.recording" is requested
    3. Boot SA8300HD with files configured as above.
    4. Wait for TestLauncher menu to be displayed on TV.
    5. Select the TestMgrXlet for execution.
    6. Press RC "INFO" button and verify display of usage message
       in console logs.  For example:

+---------------------------------------------------------+
TestMgrXlet:  Menu:
<1> - Initialize Recording Requests
<2> - Display Current List of Recording Requests
<3> - Delete All Recording Requests
<4> - Display internal list of LocatorRecordingSpecs
<5> - Dump Overlapping Entries (PRF-dependent)
<6> - Dump Entries (no filter; PRF-dependent)
<7> - Dump Entries (hardcoded PENDING_WITH_CONFLICT_STATE filter; PRF-dependent)
<8> - Dump Entries and Root Requests
<9> - Dump Entries and Parent Requests
+---------------------------------------------------------+

    7. Press "3" to delete any extant recording requests.
    8. Press "1" to create new recording requests.  For example:

+---------------------------------------------------------+
TestMgrXlet: Number of entries: 8
TestMgrXlet: ocap://0x44e Thu Aug 11 08:48:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 08:50:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 08:52:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 08:54:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 08:56:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 08:58:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 09:00:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
TestMgrXlet: ocap://0x44e Thu Aug 11 09:02:00 MDT 2005 10000 PENDING_NO_CONFLICT_STATE
+---------------------------------------------------------+

    9. Press "MENU".
   10. Select "RCL-1" Xlet for execution.  The console log messages currently include
       information about the Xlet permissions.  For example:

   (org.ocap.shared.dvr.RecordingPermission * *)

       These permissions correspond to MonitorAppPermission("handler.recording").

   11. Allow all recording requests transition to "in progress"
       (or beyond).
   12. Review the console logs, confirming all RecordingChangedEvents
       were delivered to the listener Xlet.

ANALYSIS:
    Refer to the contents of RCL-1-primary.cfg.

    There may be a simpler way to check this, but I look for the occurrence
    of the following console message to indicate start of a recording:

    MEDIA: received kEt_TvpActivateProgram, tvpId 18

    Then I look for occurrences of the following console messages to indicate
    the listener Xlet method was invoked three times:

    recordingChanged: ENTRY_STATE_CHANGED from PENDING_NO_CONFLICT_STATE to IN_PROGRESS_STATE
    recordingChanged: ENTRY_STATE_CHANGED from IN_PROGRESS_STATE to COMPLETED_STATE
    recordingChanged: ENTRY_DELETED


RCL-2
-----
PURPOSE:
    Confirm that listener Xlet with MonitorAppPermission("recording")
    receives RecordingChangedEvents based on the Extended File
    Access Permissions associated with each Recording Request.

    Listener Xlet Attributes:

    1. Different organization ID than the Test Manager Xlet
       (which creates recording requests).
    2. Monitor Application AppID

    re: hostapp.properties application_identifier

FILES:
    RCL-2-ha.properties   --> usr/hostapp.properties
    RCL-2-primary.cfg     --> qa/xlet/
    ocap.TestMgrXlet.perm --> qa/xlet/org/cablelabs/xlet/DvrSecurityTest/
    ocap.RecordingChangedListenerMAXlet.perm --> qa/xlet/org/cablelabs/xlet/DvrSecurityTest/

PROCEDURE:
    1. If necessary, modify RCL-2-primary.cfg:
        1a. Provide appropriate Source IDs.
        1b. Specify appropriate Start Times, durations (msec), and expiration
            periods (sec).  The recording requests should transition to COMPLETE
            in rapid fashion, but it is best to not generate "overlapping"
            events.
    2. If necessary, modify ocap.RecordingChangedListenerMAXlet.perm
        2a. Ensure "recording" is requested

    The remaining steps are very similar to those for RCL-1

    The console messages about Xlet permissions should include a line like
    the following:

   (org.ocap.shared.dvr.RecordingPermission read own)

       These permissions correspond to MonitorAppPermission("recording").

ANALYSIS:
    Refer to the contents of RCL-2-primary.cfg.

    Refer to RCL-1 description.
