##############################################################################
# This properties file enumerates the applications that are considered to be 
# "resident host device applications".
# While it contains information similar to an XAIT, it does not represent 
# an XAIT.
##############################################################################
# This file is generally comprised of application entries, but may contain
# others.  For more information please see the OCAP Porting Guide.
#
# Application entries have the following format:
#   app.<i>.<key>=<value>
# Where <i> is a unique index for the given entry.  By default up to 32
# unique indices may be defined.  
#
# Following is the list of required <keys>, along with a description.
# 
#  application_identifier
#     The AppID expressed as a single 48-bit number.
#     E.g., 0xC001D00D7001
#  application_control_code
#     One of AUTOSTART | PRESENT | KILL | DESTROY
#  application_name
#     The "eng" representation of the application name.  
#  base_directory
#     The path to the application's root directory.
#     By default, relative paths are relative to /snfs.
#  initial_class_name
#     The initial class name.
#     E.g., com.yourcompany.apps.YourXlet
#  priority
#     Application priority (1-255).
#        255 = MonApp
#        100-254=Unbound
#        1-200=Bound
#  visibility
#     On of INVISIBLE, VISIBLE, VISIBLE-TO-APPS-ONLY
#
# Following is a list of optional, but common <keys>:
#  args.<j>
#     Xlet arguments.
#  classpath_extension
#     Semi-colon separated list of classpath extension directories.
#     Relative to base_directory
#  service
#     Abstract service identifier.  Can be used to associate app
#     with a different abstract service (rather than the default 
#     which is 0x012345).
#
# Some notes on application_identifier's:
# - They are comprised of a 32-bit OID and 16-bit AID.
#   E.g.,   0x000000017001: OID=0x00000001, AID=0x7001
# - The OID is a unique organization ID
# - The AID determines the type of permissions that the app may have.
#   The ranges are similar to those defined for OCAP-J apps:
#     0x0000-0x3fff: unsigned permissions
#     0x4000-0x5fff: signed permissions (plus PRF if desired)
#     0x6000-0x6fff: monapp permissions (via PRF if desired)
#     0x7000-0x7fff: AllPermission
#
# In the examples below the following AIDs are used:
#     0x02?? for unsigned apps
#     0x42?? for signed apps
#     0x62?? for mon apps
#     0x72?? for AllPermission
##############################################################################

###############################################
# Number of unique indices when default has been exceeded (default = 32).
# Increase number as more unique indices are needed.
###############################################
maxapps=99

###############################################
## Application 11 - SWAK
###############################################
app.11.application_identifier=0x000000016002
app.11.application_control_code=AUTOSTART
app.11.visibility=VISIBLE
app.11.priority=220
app.11.application_name=Swak
app.11.base_directory=/snfs/qa/xlet
app.11.initial_class_name=org.cablelabs.xlet.Swak.Swak
#
# Required Plugin selection (for Automation)
#
app.11.args.0=PLUGIN org.cablelabs.xlet.Swak.TestBot
#
# Various options.
#
app.11.args.1=SC_NEW
app.11.args.2=TS_NEW
app.11.args.3=LOG_DEBUG
#
# Additional Plugin selection
#
app.11.args.4=PLUGIN org.cablelabs.xlet.Swak.ServiceMap
app.11.args.5=PLUGIN org.cablelabs.xlet.Swak.Tuner
app.11.args.6=PLUGIN org.cablelabs.xlet.Swak.Pip
app.11.args.7=PLUGIN org.cablelabs.xlet.Swak.Dvr
app.11.args.8=PLUGIN org.cablelabs.xlet.Swak.Patpmt
#
# Automation-related.
#
app.11.args.9=SCRIPTFILE org/cablelabs/xlet/Swak/scripts/dvrSwakScript
#
# Locator testing
#
app.11.args.10=UDP_REPORT
#app.11.args.11=LOC_ARGS
#
# Automated tuning
#
app.11.args.11=MONITOR_BYPASS
#
# Disable Menu Hide feature
#
app.11.args.12=VEIL_BYPASS



