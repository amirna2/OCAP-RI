#########################################################################
################ CableLabs OCAP Configuration Variables #################
################                                        #################
################         Home Networking Module         #################
#########################################################################

# OCAP Optional API Support for Home Networking -- see OCAP 13.3.14.2
ocap.api.option.hn=3.0

# Note: Update this value as Home Networking ECNs are implemented against the corresponding spec revision
#  e.g.  "I03:1545" 
ocap.api.option.hn.update=I11

# Indicate autoStart managers, and their order.
OCAP.mgrmgr.autostart=HomeNetworking

#
# Specify implementations for managers
#
OCAP.mgrmgr.manager.HomeNetworking=org.cablelabs.impl.ocap.hn.NetManagerImpl
OCAP.mgrmgr.manager.Recording=org.cablelabs.impl.manager.recording.HNRecordingMgr

OCAP.serviceMgrDelegate=org.cablelabs.impl.manager.service.HNServiceMgrDelegate
OCAP.SIMgrDelegate=org.cablelabs.impl.manager.service.HNSIManagerDelegate

OCAP.permission.extension=org.cablelabs.impl.manager.xml.nano.HomeNetworkingPermissions

# ServiceContextDelegateFactories
OCAP.serviceContextDelegateFactory=org.cablelabs.impl.service.javatv.selection.RemoteServiceContextDelegateFactory

# Limit the sharing of a NetworkInterface by Live Streaming requests
# This should be set according to the platform's capabilities or for testing
#  ("1" means 1 NI can support 1 stream, "0" means unlimited sharing)
#  NOTE: This is only relevant when DVR is disabled
#  defaulting to unlimited sharing
OCAP.networkinterface.SharedRULimit.org.ocap.hn.resource.NetResourceUsage=0

# The directory for HN storage.  Default is OCAP.persistent.root/hn
#OCAP.persistent.hn=/syscwd/hn

# Whitespace separated list of NetworkInterfaces that will be used for sending and receiving
# HN-related messages over the home network. The NetworkInterface names can be obtained via
# java.net.NetworkInterface.getName() method and are populated by the platform via
# mpeos_socketGetInterfaces(mpe_SocketNetIfList **netIfList) MPEOS API call.
OCAP.hn.multicast.iface=*

# Interval (in milliseconds) used by Cybergarage (0043-netif_monitor.patch) that
# defines the refresh cycle for the NetworkInterface monitoring thread.
OCAP.hn.iface.monitor.interval=10000

# Starting value of the SystemUpdateID.  Default is 0.  This is used for testing only.
#OCAP.hn.SystemUpdateID=0

# Amount of time in milliseconds to allow for self discovery of the OCAP Host Device and its associated media server
#OCAP.hn.MaxSelfDiscoveryTimeoutMS=15

# Search Capabilities to support
# If you change this, you also have to change iuthnvalues.HN_SEARCH_CAPABILITIES in
# https://community.cablelabs.com/svn/oc/ocap_ri/trunk/emu/ctp_testing/ext_common/
# atelite/config/iuthnvalues.cfg the same way.
#OCAP.hn.SearchCapabilities=@id,@parentID,upnp:class,upnp:objectUpdateID,upnp:containerUpdateID

# Default SSDP Search MX field to use in HTTP headers.  uPnP devices will
# only respond to search requests after a random delay from 0 to searchMX
# seconds
OCAP.hn.ssdp.searchMX=3

# Alternative name for the Media Server
#OCAP.hn.server.name=Alternative OCAP Media Server

# Number of milliseconds to wait for a successful open session event or initial presenting event prior to timing out
OCAP.hn.session.timeout.millis=30000

# Number of milliseconds allowed for server to stall/pause when unable to send content to client
# prior to timing out and stopping playback.  Default is 30000 milliseconds.
#OCAP.hn.server.connectionStallingTimeoutMS=30000
#
# Selects whether the HN Server uses chunk encoding.  One of "as-appropriate", "always" or "never".
# as-appropriate:  Chunking, or not, is set as appropriate  based on the request from the player.
# always:  Force HN Server to always use chunk encoding transfer even for fixed length content like
#     recordings.  This is to support RI HN Player trick modes. For live streaming to PS3 the value 
# of "always" should be used. 
# never: Indicates if HN Server should never use chunk encoding.  
OCAP.hn.server.chunkEncodingMode=always

# VPOP enable setting. One of "true", "false", or "mib-conditional"
OCAP.hn.server.vpop.enabled=mib-conditional

# To allow streaming VPOP from the CDS host (for testing). Default is FALSE.
# Enabling this option allows streaming from a second RI instance on the same machine 
# or from a non-RI client (e.g. VLC, curl, firefox) on the same machine using this option.
# Enabling this option does not allow streaming from same instance of RI (Server and Player
# are in same instance of the RI).  This is not supported since only one ServiceContext 
# can be active at a time on the RI. 
OCAP.hn.server.vpop.allowStreamingFromSelf=false

# Enable RI server to be lenient with requests which violate DLNA requirements
# by ignoring invalid headers and responding with content to GET request which
# include those headers.  Default is TRUE.
#
# Enabling this option will instruct RI server to ignore the following DLNA violations:
#
# 1. Allow a "Range: bytes=0-" header in a GET Request for content which does not support Range requests.
# 
# 2. Allow the RI to respond to HTTP 1.0 GET requests for content that is chunked encoded with
#    "Transfer-Encoding: chunked" header.
OCAP.hn.server.lenient.enabled=true

# Enable RI server to override encoding newline characters contained within XML tags
# (primarily within the xmlns section of the header) when returned from a DIDLLite
# CDS item browse request.
OCAP.hn.server.didllite.omit.tag.newlines=false

# Enable the implementation to ignore the default setting of class property for RecordSchedule request.
# This is set for UPnP test certification as UPnP specification for ScheduledRecording section 2.9.3.1.1 expects the value
# for class property must be sent from the ControlPoint which conflicts with OCAP HNP specification 6.8.4.7.
# By default this property is set to true to execute according to OCAP HNP specification.
OCAP.hn.server.schedule.default.classproperty=true

# Enable RI server to include the DLNA header which indicates the server
# will decimate/augment the response stream when trick play speeds are requested
# (Playspeed.dlna.org != 1).  Default is TRUE.
OCAP.hn.server.includeDLNAFrameRateInTrickModeHeader=true

# Specify which port to attempt to bind to for media streaming requests.
# If the port is already in use, a random port will be choosen.  The port number used
# can be retrieved programatically with the MediaServerManager.getHttpMediaPortNumber() method.
OCAP.hn.server.media.port=8008

# Allow VPOP to stream from same DLNA session. This will allow devices like the
# PS3 to send multiple GET requests from the same endpoint and succeed.
# DEFAULT is true.  
OCAP.hn.server.vpop.allowStreamingFromSameSession=true

# Parse the ChannelNr (channel number) metadata as a string and not as an integer.
# OCAP.hn.enableChannelNrString=true allows value such as 
# <"urn:schemas-upnp-org:metadata-1-0/upnp/", "channelNr">', value = 'Digital,133,0' 
OCAP.hn.enableChannelNrString=false

# Change the name of the View Primary Output Port content item.  The dc:title property should be
# a descriptive value indicating its function.
OCAP.hn.server.vpop.ServiceName="View Primary Output Port"

#Disables DTCP/IP for server streaming. Default is false.
#OCAP.hn.server.disableDtcpIp=true

# Disable content transformation in the stack.  Will cause an UnsupportedOperationExecption to be thrown as per spec.
OCAP.hn.server.disableTransformations=false

# Enable the EngergyManagement UPnP service.  This service is still under development, by default it will be disabled.
OCAP.hn.server.energyManagement.enabled=false

# By default multiple UDNs will be created, one for every IP address advertising the server.  Disabling will cause a 
# single UDN to be generated for all addresses.
OCAP.hn.server.disableMultiUDN=false


# Persistent link local enable setting.  Controls whether DMS should use link local address on
# interface and advertise it. Valid values are "true" or "false". Set to "false" by default.
OCAP.hn.server.linkLocal.enable=false

