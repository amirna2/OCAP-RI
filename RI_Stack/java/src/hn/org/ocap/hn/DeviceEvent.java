// COPYRIGHT_BEGIN
//  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
//  
//  Copyright (C) 2008-2013, Cable Television Laboratories, Inc. 
//  
//  This software is available under multiple licenses: 
//  
//  (1) BSD 2-clause 
//   Redistribution and use in source and binary forms, with or without modification, are
//   permitted provided that the following conditions are met:
//        ·Redistributions of source code must retain the above copyright notice, this list 
//             of conditions and the following disclaimer.
//        ·Redistributions in binary form must reproduce the above copyright notice, this list of conditions 
//             and the following disclaimer in the documentation and/or other materials provided with the 
//             distribution.
//   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
//   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED 
//   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
//   PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
//   HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
//   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
//   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
//   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
//   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF 
//   THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  
//  (2) GPL Version 2
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, version 2. This program is distributed
//   in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
//   even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//   PURPOSE. See the GNU General Public License for more details.
//  
//   You should have received a copy of the GNU General Public License along
//   with this program.If not, see<http:www.gnu.org/licenses/>.
//  
//  (3)CableLabs License
//   If you or the company you represent has a separate agreement with CableLabs
//   concerning the use of this code, your rights and obligations with respect
//   to this code shall be as set forth therein. No license is granted hereunder
//   for any other purpose.
//  
//   Please contact CableLabs if you need additional information or 
//   have any questions.
//  
//       CableLabs
//       858 Coal Creek Cir
//       Louisville, CO 80027-9750
//       303 661-9100
// COPYRIGHT_END

package org.ocap.hn;

/**
 * Represents a Device Event. There are two types of Device events: one that is
 * generated by the NetManager when a Device is added or removed from the home
 * network. Application may register as a listener to NetManager to receive such
 * events. The other DeviceEvent is generated by the Device itself when its
 * internal state changes. Application should register as a listener with a
 * particular Device for such events. In both scenarios, the Device that was the
 * source of the event is returned.
 */
public class DeviceEvent extends java.util.EventObject
{
    /**
     * A constant indicating new device is registered to home network.
     */
    public static final int DEVICE_ADDED = 100;

    /**
     * A constant indicating a device is removed from home network.
     */
    public static final int DEVICE_REMOVED = 101;

    /**
     * A constant indicating a device is updated from home network.
     */
    public static final int DEVICE_UPDATED = 102;

    /**
     * A constant indicating a device's internal state has changed.
     */
    public static final int STATE_CHANGE = 201;

    /**
     * Type of event inited by constructor.
     */
    private int eventType = 0;

    /**
     * Source of event inited by constructor
     */
    private Object eventSource = null;

    /**
     * Constructs a DeviceEvent by specifying type and source.
     * 
     * @param type
     *            Device change type, allowed type are defined in
     *            <code>DeviceEvent</code>
     * @param source
     *            Device where the change happens.
     */
    public DeviceEvent(int type, Object source)
    {
        super(source);

        this.eventSource = source;
        this.eventType = type;
    }

    /**
     * Returns device event type, as defined in <code>DeviceEvent</code>.
     * 
     * @return device event type
     */
    public int getType()
    {
        return this.eventType;
    }

    /**
     * Returns device event source, which is always a Device.
     * 
     * @return device event source
     */
    public Object getSource()
    {
        return this.eventSource;
    }
}
