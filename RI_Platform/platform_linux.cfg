##
## The main configuration file for the RI Platform Launcher (bootstrapper).
## Any value in this file may contain environment variables in the form:
##
##                 $(ENV_VAR)
## 
## All environment variables must be enclosed in parentheses.
##

# For any configurations that allow multiple values (e.g. RI.Platform.arg.x),
# this value indicates the maximum number of values that the platform will
# successfully parse
Config.maxMultiValues = 32

# The block size to be used for the GST tuner type (if in use)
RI.Platform.tunerBlkSize = 20

#############################################################################
##                     RI Platform Launch Configurations                   ##
#############################################################################

# Platform module name
RI.Launch.Platform.moduleName = libplatform.so

# Platform init function
RI.Launch.Platform.initFunc = ri_platform_init
RI.Launch.Platform.arg.0 = $(PLATFORMROOT)/platform.cfg

# Platform main loop function
RI.Launch.Platform.loopFunc = ri_platform_loop

# Platform termination function
RI.Launch.Platform.termFunc = ri_platform_term

#############################################################################
##           RI Platform Application Launch Configurations                 ##
#############################################################################

RI.Launch.App.0 = ocap_stack
RI.Launch.App.0.moduleName = $(OCAPROOT)/bin/$(OCAPTC)/bin/libmpe.so
RI.Launch.App.0.mainFunc = ri_stack_init
RI.Launch.App.0.termFunc = ri_stack_term
RI.Launch.App.0.cwd = $(OCAPROOT)/bin/$(OCAPTC)/env
RI.Launch.App.0.arg.0 = --config
RI.Launch.App.0.arg.1 = $(OCAPROOT)/bin/$(OCAPTC)/env/mpeenv.ini
RI.Launch.App.0.arg.2 = --modulePath
RI.Launch.App.0.arg.3 = $(OCAPROOT)/bin/$(OCAPTC)/bin:$(OCAPROOT)/bin/$(OCAPTC)/env

#
#RI.Launch.App.1 = mfg_stack
#RI.Launch.App.1.moduleName = $(MFGROOT)/install/$(MFGTC)/lib/libmfg.so
#RI.Launch.App.1.mainFunc = mfg_stack_init
#RI.Launch.App.1.termFunc = mfg_stack_term
#
# is this really what we want to do (i.e. change working directory)?
##RI.Launch.App.1.cwd = $(MFGROOT)/install/$(MFGTC)/lib
#

#RI.Launch.App.0 = surfer
#RI.Launch.App.0.moduleName = $(PLATFORMROOT)/../Surfer/install/$(PLATFORMTC)/lib/libsurfer.so
#RI.Launch.App.0.mainFunc = srfr_init
#RI.Launch.App.0.termFunc = srfr_term
#RI.Launch.App.0.cwd = $(PLATFORMROOT)
#RI.Launch.App.0.arg.0 = $(PLATFORMROOT)/platform.cfg


